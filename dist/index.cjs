"use strict";const e=new Set([""]),t=(r={})=>{const n=r.onlyUpdate,i=r.usedUniques,s=!1!==r.reduplicateExit,a=r.throwErrorHandler||(e=>{}),o=r.reduplicateHandler||(e=>e),l=r.listenCacherHandler||(e=>{}),c=!0===s||"function"!=typeof r.reduplicateHandler;let d=r.radix||16,u=r.random||"?",g=r.format||null,p="number"==typeof r.tryCount?r.tryCount:10;if(!0===n)try{return i instanceof Array&&i.forEach((t=>"string"==typeof t&&e.add(t.trim()))),i instanceof Set&&i.forEach((t=>"string"==typeof t&&e.add(t.trim()))),l(new Set(e)),""}catch{throw a(new Set(e)),new Error("[Options.listenCacherHandler] is Call Error")}if([10,16,26,36].includes(d)||(d=16),["?","*","#"].includes(u)||(u="?"),String(g)!==g&&(g="????????-????-[1-5]???-[8-b]???-????????????",g=g.replace(/\?/g,u)),i instanceof Array)try{i.forEach((t=>"string"==typeof t&&e.add(t.trim()))),l(new Set(e))}catch{throw a(new Set(e)),new Error("[Options.listenCacherHandler] is Call Error")}if(i instanceof Set)try{i.forEach((t=>"string"==typeof t&&e.add(t.trim()))),l(new Set(e))}catch{throw a(new Set(e)),new Error("[Options.listenCacherHandler] is Call Error")}let f="",h=!0,m=!1;const w=Array.from({length:36},((e,t)=>t.toString(36))),y=e.add.bind(e);for(;h&&p-- >0;){if(f=[...g.replace(/\[([^\]]+?)\]/g,((e,t)=>{if("string"==typeof t){const e=new Set,r=e.add.bind(e),n=t.toLowerCase().split(/\s*,\s*/g).filter((e=>/^[a-zA-Z0-9\s/|\-*?#=:;]+$/iu.test(e))),i=e=>/^\s*[a-zA-Z0-9]\s*-\s*[a-zA-Z0-9]\s*$/.test(e);if((e=>/^\s*timer\s*:\s*(YYYY|MM|DD|HH|mm|ss|iii|:|-|\/|\s)+\s*$/.test(e))(t.trim())){const e=new Date,r=`${e.getFullYear()}`,n=e.getMonth()+1>9?`${e.getMonth()+1}`:`0${e.getMonth()+1}`,i=e.getMinutes()>9?`${e.getMinutes()}`:`0${e.getMinutes()}`,s=e.getSeconds()>9?`${e.getSeconds()}`:`0${e.getSeconds()}`,a=e.getMilliseconds()>99?`${e.getMilliseconds()}`:e.getMilliseconds()>9?`0${e.getMilliseconds()}`:`00${e.getMilliseconds()}`,o=e.getHours()>9?`${e.getHours()}`:`0${e.getHours()}`,l=e.getDate()>9?`${e.getDate()}`:`0${e.getDate()}`;return t.trim().replace(/^\s*timer\s*:\s*/,"").replace(/YYYY/,r).replace(/MM/,n).replace(/DD/,l).replace(/HH/,o).replace(/mm/,i).replace(/ss/,s).replace(/iii/,a).replace(/\s+/g," ")}const s=n.reduce(((e,t)=>{if(i(t.trim())){const e=t.trim().split(/\s*-\s*/)[0],n=t.trim().split(/\s*-\s*/)[1],i=w.indexOf(e.trim()),s=w.indexOf(n.trim()),a=Math.min(i,s),o=Math.max(i,s)+1;w.slice(a,o).forEach(r)}return i(t.trim())||r(t.trim()),e}),e),a=Array.from(s).filter((e=>!!e));return a[Math.random()*a.length|0]||""}return e})).toLowerCase()].filter((e=>/^[a-zA-Z0-9\s/|\-*?#=:;]+$/iu.test(e))).map((e=>e===u?w[Math.random()*d|0+(26===d?10:0)]:e)).join("").trim(),!e.has(f))try{h=!1,y(f),l(new Set(e))}catch{throw a(new Set(e)),new Error("[Options.listenCacherHandler] is Call Error")}}if(h&&c)throw a(new Set(e)),new Error("[Uniquener generate unique] is Reduplicated");if(h&&!c)try{const e=o(r),n={reduplicateExit:!0};return m=!0,t({...r,...e,...n})}catch{throw!m&&a(new Set(e)),new Error(m?"[Uniquener generate unique] is Reduplicated":"[Options.reduplicateHandler] is Call Error")}return f};module.exports=t;
